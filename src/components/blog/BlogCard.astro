---
import { Image } from 'astro:assets';

import type { BlogPostWithAuthors } from '@/lib/collections';
import { getColorFromString } from '@/utils/colors';

interface Props {
  post: BlogPostWithAuthors;
}

const { post } = Astro.props;
const backgroundColor = getColorFromString(post.data.title);
---

<article
  class="group relative flex flex-col overflow-hidden rounded-lg border transition-all hover:shadow-lg dark:border-gray-800"
  style={`background-color: ${backgroundColor};`}
>
  {
    post.data.cover && (
      <div class="aspect-video w-full overflow-hidden">
        <Image
          src={post.data.cover}
          alt={post.data.title}
          class="h-full w-full object-cover transition-transform duration-300 group-hover:scale-105"
        />
      </div>
    )
  }
  <div class="flex flex-1 flex-col justify-between gap-4 p-6">
    <div class="flex flex-col gap-4">
      <h2 class="line-clamp-2 text-xl font-semibold tracking-tight">
        <a href={`/blog/${post.id}`} class="hover:underline">
          {post.data.title}
        </a>
      </h2>
      <p class="line-clamp-3 text-sm text-gray-600 dark:text-gray-400">
        {post.data.description}
      </p>
    </div>
    <div class="flex items-center justify-between">
      <div class="flex items-center gap-2">
        {
          post.authors.map(author => (
            <Image
              src={author.data.image}
              alt={author.data.name}
              width={24}
              height={24}
              class="rounded-full"
            />
          ))
        }
        <span class="text-sm text-gray-600 dark:text-gray-400">{post.readingTime}</span>
      </div>
      <time
        datetime={post.data.published_date.toISOString()}
        class="text-sm text-gray-600 dark:text-gray-400"
      >
        {
          post.data.published_date.toLocaleDateString('en-US', {
            year: 'numeric',
            month: 'short',
            day: 'numeric',
          })
        }
      </time>
    </div>
  </div>
</article>
