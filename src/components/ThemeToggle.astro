---
import { Button } from '@/components/ui/button';
---

<Button
  variant="ghost"
  size="icon"
  id="theme-toggle"
  title="Toggle theme"
  className="relative"
  transition:persist
>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    fill="none"
    viewBox="0 0 24 24"
    stroke-width="1.5"
    stroke="currentColor"
    class="h-5 w-5 rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0"
  >
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      d="M12 3v2.25m6.364.386l-1.591 1.591M21 12h-2.25m-.386 6.364l-1.591-1.591M12 18.75V21m-4.773-4.227l-1.591 1.591M5.25 12H3m4.227-4.773L5.636 5.636M15.75 12a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z"
    ></path>
  </svg>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    fill="none"
    viewBox="0 0 24 24"
    stroke-width="1.5"
    stroke="currentColor"
    class="absolute h-5 w-5 rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100"
  >
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      d="M21.752 15.002A9.718 9.718 0 0118 15.75c-5.385 0-9.75-4.365-9.75-9.75 0-1.33.266-2.597.748-3.752A9.753 9.753 0 003 11.25C3 16.635 7.365 21 12.75 21a9.753 9.753 0 009.002-5.998z"
    ></path>
  </svg>
</Button>

<script>
  // Function to get the current theme
  const getTheme = (): 'light' | 'dark' => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      const theme = localStorage.getItem('theme');
      if (theme === 'light' || theme === 'dark') return theme;
    }
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return 'dark';
    }
    return 'light';
  };

  // Function to apply the theme
  const applyTheme = () => {
    const theme = getTheme();
    document.documentElement.classList.toggle('dark', theme === 'dark');
  };

  // Function to handle theme toggle
  const handleToggleClick = () => {
    const isDark = document.documentElement.classList.toggle('dark');
    localStorage.setItem('theme', isDark ? 'dark' : 'light');
  };

  // Apply theme on initial load
  applyTheme();

  // Handle click events
  document.addEventListener('astro:page-load', () => {
    const themeToggle = document.getElementById('theme-toggle');
    themeToggle?.addEventListener('click', handleToggleClick);
  });

  // Apply theme immediately after view transitions
  document.addEventListener('astro:after-swap', applyTheme);
</script>
