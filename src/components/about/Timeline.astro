---
import { Icon } from 'astro-icon/components';
import { getCollection, render, type CollectionEntry } from 'astro:content';

interface Props {
  type?: 'education' | 'experience' | 'project';
  title: string;
}

const { type, title } = Astro.props;

// Get timeline entries
const entries = await getCollection('timeline');
const filteredEntries = type
  ? entries.filter((entry: CollectionEntry<'timeline'>) => entry.data.type === type)
  : entries;

// Sort items by date (most recent first)
const sortedItems = [...filteredEntries].sort((a, b) => {
  const dateA = a.data.endDate === 'present' ? new Date() : new Date(a.data.startDate);
  const dateB = b.data.endDate === 'present' ? new Date() : new Date(b.data.startDate);
  return dateB.getTime() - dateA.getTime();
});

// Pre-render all content
const renderedContent = await Promise.all(
  sortedItems.map(async (item: CollectionEntry<'timeline'>) => {
    const rendered = await render(item);
    return {
      item,
      Content: rendered.Content,
    };
  })
);

// Add client-side script for calculating line positions
---

<style>
  @keyframes pulse {
    0% {
      box-shadow: 0 0 0 0 rgb(16 185 129 / 0.7);
    }
    70% {
      box-shadow: 0 0 0 10px rgb(16 185 129 / 0);
    }
    100% {
      box-shadow: 0 0 0 0 rgb(16 185 129 / 0);
    }
  }
  .pulse {
    animation: pulse 2s infinite;
  }
  /* Card content */
  .timeline-card-content {
    @apply mt-6 max-w-none text-sm leading-relaxed text-muted-foreground;
  }

  .timeline-card-content :global(p) {
    @apply mb-4;
  }

  .timeline-card-content :global(ul) {
    @apply mb-4 list-disc pl-4;
  }

  .timeline-card-content :global(li) {
    @apply mb-2;
  }

  .timeline-card-content :global(a) {
    @apply text-primary hover:underline;
  }

  .timeline-card-content :global(strong) {
    @apply font-semibold text-foreground;
  }
</style>

<div class="flex flex-col">
  <h1
    class="font-wise mb-12 bg-gradient-to-r from-purple-400 to-purple-600 bg-clip-text text-center text-5xl font-bold text-transparent"
  >
    {title}
  </h1>

  <div class="relative mx-auto max-w-5xl px-4">
    <div
      class="pointer-events-none absolute left-8 h-full w-[3px] bg-gradient-to-b from-transparent via-purple-500/60 to-transparent shadow-[0_0_15px_rgba(168,85,247,0.2)] md:left-8"
    >
    </div>
    <div class="relative flex flex-col gap-16">
      {
        renderedContent.map(({ item, Content }) => {
          const isActive = item.data.endDate === 'present';
          return (
            <div
              class:list={[
                'relative w-full pl-16 transition-all duration-500 before:absolute before:left-[calc(1rem_-_8px)] before:top-1/2 before:z-20 before:h-4 before:w-4 before:-translate-y-1/2 before:rounded-full before:border-2 before:bg-background before:transition-all before:duration-300 before:content-[""] after:absolute after:left-4 after:top-1/2 after:h-[3px] after:w-6 after:-translate-y-1/2 after:bg-gradient-to-r after:from-purple-500/60 after:to-purple-500/30 after:content-[""] hover:before:scale-125 md:pl-16 md:before:left-[calc(2rem_-_8px)] md:after:left-8 md:after:w-8',
                {
                  'before:border-emerald-500/50 before:shadow-[0_0_20px_rgba(16,185,129,0.4)] hover:before:border-emerald-500/80':
                    isActive,
                  'before:border-purple-500/50 before:shadow-[0_0_20px_rgba(168,85,247,0.4)] hover:before:border-purple-500/80':
                    !isActive,
                },
              ]}
              data-animate
            >
              <div
                class:list={[
                  'relative rounded-xl p-8 shadow-[0_4px_6px_-1px_rgba(0,0,0,0.1),0_2px_4px_-2px_rgba(0,0,0,0.1),0_0_0_1px_rgba(255,255,255,0.05)] backdrop-blur-md transition-all duration-300',
                  isActive
                    ? 'bg-gradient-to-br from-emerald-50/50 via-emerald-100/30 to-transparent dark:from-emerald-950/30 dark:via-emerald-900/20'
                    : 'bg-gradient-to-br from-purple-50/50 via-purple-100/30 to-transparent dark:from-purple-950/30 dark:via-purple-900/20',
                ]}
              >
                <div class="flex flex-col gap-1 md:flex-row md:items-center md:justify-between">
                  <div class="flex flex-col gap-0.5">
                    <h3 class="text-2xl font-bold tracking-tight text-foreground">
                      {item.data.title}
                    </h3>
                    <div>
                      {item.data.organization_url ? (
                        <a
                          href={item.data.organization_url}
                          target="_blank"
                          rel="noopener noreferrer"
                          class:list={[
                            'text-lg font-medium text-muted-foreground transition-colors hover:underline',
                          ]}
                        >
                          {item.data.organization}
                        </a>
                      ) : (
                        <span
                          class:list={[
                            'text-lg font-medium',
                            isActive
                              ? 'text-emerald-600 dark:text-emerald-400'
                              : 'text-purple-500 dark:text-purple-400',
                          ]}
                        >
                          {item.data.organization}
                        </span>
                      )}
                    </div>
                  </div>
                  <div class="mt-2 flex flex-col items-end gap-0.5 md:mt-0">
                    <div class="flex items-center gap-2 text-base font-medium text-muted-foreground">
                      <Icon name="lucide:calendar" class="h-4 w-4" />
                      <span>
                        {item.data.startDate} {item.data.endDate ? ' - ' + item.data.endDate : ''}
                      </span>
                    </div>
                    <div class="flex items-center gap-2 text-base font-medium text-muted-foreground">
                      <Icon name="lucide:map-pin" class="h-4 w-4" />
                      <span>{item.data.location}</span>
                    </div>
                  </div>
                </div>

                <div class="timeline-card-content">
                  <Content />
                </div>
              </div>
            </div>
          );
        })
      }
    </div>
  </div>
</div>
